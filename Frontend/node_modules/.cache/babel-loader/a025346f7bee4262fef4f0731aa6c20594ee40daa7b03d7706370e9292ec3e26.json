{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arjun\\\\Downloads\\\\e\\\\e-commerce\\\\frontend\\\\src\\\\Context\\\\ShopContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ShopContext = /*#__PURE__*/createContext(null);\nconst getDefaultCart = () => {\n  let cart = {};\n  for (let index = 0; index < 300 + 1; index++) {\n    cart[index] = {\n      quantity: 0,\n      size: null\n    }; // Store quantity and size\n  }\n  return cart;\n};\nconst ShopContextProvider = props => {\n  _s();\n  const [all_product, setAll_Product] = useState([]);\n  const [cartItems, setCartItems] = useState(getDefaultCart());\n  useEffect(() => {\n    fetch('http://localhost:4000/allproducts').then(response => response.json()).then(data => setAll_Product(data));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/getcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: ''\n      }).then(response => response.json()).then(data => setCartItems(data));\n    }\n  }, []);\n  const addToCart = (itemId, size) => {\n    // Update the cart with size information\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: {\n        quantity: prev[itemId].quantity + 1,\n        size: size\n      }\n    }));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/addtocart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          itemId: itemId,\n          size: size\n        })\n      }).then(response => response.json()).then(data => console.log(data));\n    }\n  };\n  const removeFromCart = itemId => {\n    setCartItems(prev => ({\n      ...prev,\n      [itemId]: {\n        quantity: prev[itemId].quantity - 1,\n        size: prev[itemId].size\n      }\n    }));\n    if (localStorage.getItem('auth-token')) {\n      fetch('http://localhost:4000/removefromcart', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/form-data',\n          'auth-token': `${localStorage.getItem('auth-token')}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          itemId: itemId\n        })\n      }).then(response => response.json()).then(data => console.log(data));\n    }\n  };\n  const getTotalCartAmount = () => {\n    let totalAmount = 0;\n    for (const item in cartItems) {\n      if (cartItems[item].quantity > 0) {\n        let itemInfo = all_product.find(product => product.id === Number(item));\n        totalAmount += itemInfo.new_price * cartItems[item].quantity;\n      }\n    }\n    return totalAmount;\n  };\n  const getTotalCartItems = () => {\n    let totalItem = 0;\n    for (const item in cartItems) {\n      if (cartItems[item].quantity > 0) {\n        totalItem += cartItems[item].quantity;\n      }\n    }\n    return totalItem;\n  };\n  const contextValue = {\n    getTotalCartItems,\n    getTotalCartAmount,\n    all_product,\n    cartItems,\n    addToCart,\n    removeFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(ShopContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 10\n  }, this);\n};\n_s(ShopContextProvider, \"2TWfLOVtZEcAkOpQXwNNYfVqbAU=\");\n_c = ShopContextProvider;\nexport default ShopContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ShopContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","ShopContext","getDefaultCart","cart","index","quantity","size","ShopContextProvider","props","_s","all_product","setAll_Product","cartItems","setCartItems","fetch","then","response","json","data","localStorage","getItem","method","headers","Accept","body","addToCart","itemId","prev","JSON","stringify","console","log","removeFromCart","getTotalCartAmount","totalAmount","item","itemInfo","find","product","id","Number","new_price","getTotalCartItems","totalItem","contextValue","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/arjun/Downloads/e/e-commerce/frontend/src/Context/ShopContext.jsx"],"sourcesContent":["import React, { createContext, useEffect, useState } from 'react';\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nconst getDefaultCart = () => {\r\n  let cart = {};\r\n  for (let index = 0; index < 300 + 1; index++) {\r\n    cart[index] = { quantity: 0, size: null };  // Store quantity and size\r\n  }\r\n  return cart;\r\n};\r\n\r\nconst ShopContextProvider = (props) => {\r\n  const [all_product, setAll_Product] = useState([]);\r\n  const [cartItems, setCartItems] = useState(getDefaultCart());\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:4000/allproducts')\r\n      .then((response) => response.json())\r\n      .then((data) => setAll_Product(data));\r\n\r\n    if (localStorage.getItem('auth-token')) {\r\n      fetch('http://localhost:4000/getcart', {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/form-data',\r\n          'auth-token': `${localStorage.getItem('auth-token')}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: '',\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => setCartItems(data));\r\n    }\r\n  }, []);\r\n\r\n  const addToCart = (itemId, size) => {\r\n    // Update the cart with size information\r\n    setCartItems((prev) => ({\r\n      ...prev,\r\n      [itemId]: { quantity: prev[itemId].quantity + 1, size: size },\r\n    }));\r\n\r\n    if (localStorage.getItem('auth-token')) {\r\n      fetch('http://localhost:4000/addtocart', {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/form-data',\r\n          'auth-token': `${localStorage.getItem('auth-token')}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ itemId: itemId, size: size }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => console.log(data));\r\n    }\r\n  };\r\n\r\n  const removeFromCart = (itemId) => {\r\n    setCartItems((prev) => ({\r\n      ...prev,\r\n      [itemId]: { quantity: prev[itemId].quantity - 1, size: prev[itemId].size },\r\n    }));\r\n\r\n    if (localStorage.getItem('auth-token')) {\r\n      fetch('http://localhost:4000/removefromcart', {\r\n        method: 'POST',\r\n        headers: {\r\n          Accept: 'application/form-data',\r\n          'auth-token': `${localStorage.getItem('auth-token')}`,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ itemId: itemId }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => console.log(data));\r\n    }\r\n  };\r\n\r\n  const getTotalCartAmount = () => {\r\n    let totalAmount = 0;\r\n    for (const item in cartItems) {\r\n      if (cartItems[item].quantity > 0) {\r\n        let itemInfo = all_product.find((product) => product.id === Number(item));\r\n        totalAmount += itemInfo.new_price * cartItems[item].quantity;\r\n      }\r\n    }\r\n    return totalAmount;\r\n  };\r\n\r\n  const getTotalCartItems = () => {\r\n    let totalItem = 0;\r\n    for (const item in cartItems) {\r\n      if (cartItems[item].quantity > 0) {\r\n        totalItem += cartItems[item].quantity;\r\n      }\r\n    }\r\n    return totalItem;\r\n  };\r\n\r\n  const contextValue = {\r\n    getTotalCartItems,\r\n    getTotalCartAmount,\r\n    all_product,\r\n    cartItems,\r\n    addToCart,\r\n    removeFromCart,\r\n  };\r\n\r\n  return <ShopContext.Provider value={contextValue}>{props.children}</ShopContext.Provider>;\r\n};\r\n\r\nexport default ShopContextProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}